{"version":3,"sources":["logo.svg","Components/Header.js","Components/Context/AppReducer.js","Components/Context/GlobalState.js","Components/Balance.js","Components/AccountSummary.js","Components/Transaction.js","Components/TransactionHistory.js","Components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","transactionAmount","reduce","acc","item","toFixed","AccountSummary","amounts","income","expense","console","log","className","Transaction","sign","description","Math","abs","onClick","TransactionHistory","AddTransaction","useState","setdescription","setTransactionAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","required","placeholder","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.601504f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\n\nexport default function Header() {\n    return (\n        <h1>\n            Expense Tracker By Farjad\n        </h1>\n    )\n}\n","const AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n            }\n\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        default:\n            return state;\n    }\n}\n\nexport default AppReducer","import React, { createContext, useReducer } from 'react'\nimport AppReducer from './AppReducer'\nconst initialState = {\n    transactions: []\n}\n//Create Global Context\nexport const GlobalContext = createContext(initialState);\n\n//Create a Provider for the Global Context\nexport const GlobalProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(AppReducer, initialState)\n\n    //Actions\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        })\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n    return (\n        <GlobalContext.Provider value={\n            {\n                transactions: state.transactions,\n                deleteTransaction,\n                addTransaction\n            }\n        }>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\n","import React , {useContext} from 'react'\nimport { GlobalContext } from \"./Context/GlobalState\";\n\n\nexport default function Balance() {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction=>transaction.transactionAmount);\n    const total = (amounts.reduce((acc, item) => (acc+=item), 0)).toFixed(2);\n\n    return (\n        <div>\n            <h4>Current Balance</h4>\n            <h1>${total}</h1>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from \"./Context/GlobalState\";\n\nexport const AccountSummary = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.transactionAmount)\n    const income = amounts.filter(item => item > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\n    const expense = (amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0)*-1).toFixed(2);\n\n    console.log(amounts)\n\n    return (\n        <div className='inc-exp-container'>\n            <div>\n                <h4>Income</h4>\n                <p className='money plus'>${income}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p className='money minus'>${expense}</p>\n\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from \"./Context/GlobalState\";\n\n\nexport const Transaction = ({ transaction }) => {\n    const { deleteTransaction } = useContext(GlobalContext)\n    let sign = transaction.transactionAmount < 0 ? '-' : '+';\n    return (\n        <li className={transaction.transactionAmount > 0 ? 'plus' : 'minus'}>\n            {transaction.description}\n            <span>{sign}${Math.abs(transaction.transactionAmount)}</span>\n            <button className='delete-btn' onClick={() => deleteTransaction(transaction.id)}>x</button>\n        </li>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from \"./Context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\n\nexport const TransactionHistory = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    console.log(transactions)\n    return (\n        <div>\n            <h3>Transaction History</h3>\n            <ul className='list'>\n                {transactions.map(transaction => (\n                    <Transaction key={transaction.id} transaction={transaction} />\n                ))}\n            </ul>\n        </div>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { GlobalContext } from \"./Context/GlobalState\";\n\n\nexport const AddTransaction = () => {\n    const { addTransaction } = useContext(GlobalContext)\n\n    const [description, setdescription] = useState();\n    const [transactionAmount, setTransactionAmount] = useState();\n\n    const onSubmit = e =>{\n        e.preventDefault();\n\n        const newTransaction = {\n            id: Math.floor(Math.random()*100000000),\n            description,\n            transactionAmount: +transactionAmount\n        }\n        addTransaction(newTransaction);\n        setdescription('')\n        setTransactionAmount('')\n    }\n\n    return (\n        <div>\n            <h3>\n                Add New Transaction\n            </h3>\n            <form onSubmit={onSubmit}>\n                <div>\n                    <label htmlFor='description'>Description</label>\n                    <input type='text' id='description' value={description} required placeholder='Detail of Transaction'\n                        onChange={(e) => setdescription(e.target.value)} />\n                </div>\n                <div>\n                    <label htmlFor='transactionamount'>Transaction Amount</label>\n                    <input type='text' id='transactionamount' value={transactionAmount} required placeholder='Enter Transaction Amount'\n                        onChange={(e) => setTransactionAmount(e.target.value)} />\n\n                </div>\n                <button className='btn'>\n                    Add Transaction\n                </button>\n            </form>\n        </div>\n    )\n}\n","import logo from './logo.svg';\nimport './App.css';\n\n// import Components\n\nimport Header from \"./Components/Header\";\nimport Balance from \"./Components/Balance\";\nimport { AccountSummary } from \"./Components/AccountSummary\";\nimport { TransactionHistory } from \"./Components/TransactionHistory\";\nimport { AddTransaction } from \"./Components/AddTransaction\";\nimport { GlobalProvider } from \"./Components/Context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider >\n      <Header />\n      <div className='container'>\n\n        <Balance />\n        <AccountSummary />\n        <TransactionHistory/>\n        <AddTransaction/>\n      </div>\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}